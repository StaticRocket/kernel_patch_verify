#!/bin/bash

export DOCKER_MOUNT_DIRS IMG_NAME KP_PATH

# Check if Docker image exists

# Use Directly from github container registry if not provided:
# dockerhub location is nishanthmenon/arm-kernel-dev
IMG_NAME="${IMG_NAME:-ghcr.io/nmenon/arm-kernel-dev}"

# TBD: If we are using from github -> I need to figure out how to get that working..

# If we are building locally
# IMG_NAME=arm-kernel-dev

# Check if docker exists
docker=$(which docker)
if [ -z "$docker" ]; then
	echo "Please install Docker to be able to function"
	exit 1
fi

# If we are working off docker image from github container reg, make sure
# we have the latest.
if [ "$IMG_NAME" = "ghcr.io/nmenon/arm-kernel-dev" ]; then
	docker pull "$IMG_NAME"
fi
ccache=$(which ccache 2> /dev/null)
if [ -z "$ccache" ]; then
	if [ ! -d "/tmp/ccache" ]; then
		mkdir /tmp/ccache
	fi
	CCACHEDIR=/tmp/ccache
else
	CCACHEDIR=$(ccache -s|grep "cache directory"|sed -e "s/\s\s*/ /g"|cut -d ' ' -f3|xargs echo)
	if [ -z "$CCACHEDIR" ]; then
		CCACHEDIR=$(ccache -v -s|grep -i "cache directory"|sed -e "s/\s\s*/ /g"|cut -d ':' -f2|xargs echo)
	fi
fi

DOCKER_MOUNT_DIRS=()
DOCKER_MOUNT_DIRS+=(-v /tmp:/tmp)
DOCKER_MOUNT_DIRS+=(-v /opt:/opt)
DOCKER_MOUNT_DIRS+=(-v "$CCACHEDIR":/ccache)
DOCKER_MOUNT_DIRS+=(-v "$(pwd)":/workdir)

# Check if current directory is a git directory
if ! GIT_WORKTREE_COMMONDIR=$(git rev-parse --git-common-dir); then
	exit 1
fi

# Mount parent directory if its a worktree
if [ "$GIT_WORKTREE_COMMONDIR" != ".git" ]; then
	DOCKER_MOUNT_DIRS+=(-v "$GIT_WORKTREE_COMMONDIR":"$GIT_WORKTREE_COMMONDIR")
fi

# list of paths to append to the PATH variable in the container
extra_paths=(
	/workdir/scripts/dtc
	/opt/cross-gcc-linux-13/bin
	/opt/cross-gcc-linux-12/bin
	/opt/cross-gcc-linux-11/bin
	/opt/cross-gcc-linux-10/bin
	/opt/cross-gcc-linux-9/bin
)

KP_PATH=$(IFS=:; printf '%s' "${extra_paths[*]}")
