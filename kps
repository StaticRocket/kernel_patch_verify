#!/bin/bash

# Use Directly from Docker hub if not provided:
IMG_NAME="${IMG_NAME:-nishanthmenon/arm-kernel-dev}"

# TBD: If we are using from github -> I need to figure out how to get that working..

# If we are building locally
# IMG_NAME=arm-kernel-dev

# Check if docker exists
docker=`which docker`
if [ -z "$docker" ]; then
	echo "Please install Docker and Image arm-kernel-dev from:" `dirname $0`
	exit 1
fi
dimg=`docker image ls | grep arm-kernel-dev`
if [ -z "$dimg" ]; then
	echo "Please install Docker Image arm-kernel-dev from: cd" `dirname $0` ";make"
	exit 1
fi
# If we are working off docker image from docker hub, make sure
# we have the latest.
if [ "$IMG_NAME" = "nishanthmenon/arm-kernel-dev" ]; then
	docker pull $IMG_NAME
fi
ccache=`which ccache`
if [ -z "ccache" ]; then
	if [ ! -d "/tmp/ccache" ]; then
		mkdir /tmp/ccache
	fi
	CCACHEDIR=/tmp/ccache
else
	CCACHEDIR=`ccache -s|grep "cache directory"|sed -e "s/\s\s*/ /g"|cut -d ' ' -f3`
fi

GN=`git config --get user.name`
GE=`git config --get user.email`
if [ -z "$GE" -o -z "$GN" ]; then
	echo "We need to know who you are to proceed, please check 'git config -l' and fix via:"
	echo 'git config --global user.email "you@example.com"'
	echo 'git config --global user.name "Your Name"'
	exit 3
fi

TMP_PREFIX="kernel_patch_verify_kps"

TMP_GITCONFIG=`mktemp -t $TMP_PREFIX.gitconfig.XXXXXX`
echo '[user]' >$TMP_GITCONFIG
git config -l|grep ^user|cut -d '.' -f2->>$TMP_GITCONFIG
echo '[core]' >>$TMP_GITCONFIG
git config -l|grep ^core|cut -d '.' -f2->>$TMP_GITCONFIG

export PATH=/workdir/scripts/dtc/:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/opt/cross-gcc-linux-10/bin/:/opt/cross-gcc-linux-9/bin/
# If we wanted to get to bash shell:
docker run --rm -ti -e PATH -v $TMP_GITCONFIG:/workdir/.gitconfig -v /tmp:/tmp -v /opt:/opt -v "$CCACHEDIR":/ccache -v `pwd`:/workdir "$IMG_NAME" bash

rm -f $TMP_GITCONFIG
